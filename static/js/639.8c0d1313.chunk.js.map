{"version":3,"file":"static/js/639.8c0d1313.chunk.js","mappings":"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","sources":["components/weather/CountryFlag.tsx","hooks/useFavorite.ts","pages/Favorite.tsx","utils/location.ts","utils/number.ts","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","../node_modules/@mui/system/esm/createStyled.js","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js"],"sourcesContent":["import { memo } from \"react\";\n\nconst CountryFlag = ({\n  countryCode,\n  fontSize,\n}: {\n  countryCode: string;\n  fontSize?: string | number;\n}) => {\n  return (\n    <span\n      style={{ fontSize, margin: 5 }}\n      className={`fi fi-${countryCode.toLowerCase()}`}\n    />\n  );\n};\n\nexport default memo(CountryFlag);\n","import { useCallback, useState } from \"react\";\nimport type { LocationData } from \"types/data\";\nimport { findLocationIndex, getGeolocationFromString } from \"utils/location\";\nimport { useRefInSync } from \"./helpers/useRefInSync\";\n\nconst FAVORITE_KEY = \"WEATHER_PWA_FAV\";\n\nexport const useFavorite = () => {\n  const [favoriteList, setFavoriteList] = useState<\n    Array<string | LocationData>\n  >(() => {\n    return JSON.parse(localStorage.getItem(FAVORITE_KEY) || \"[]\") as Array<\n      string | LocationData\n    >;\n  });\n  const addFavorite = useCallback((location: string | LocationData) => {\n    setFavoriteList((curList) => {\n      const newList = [...curList];\n      if (typeof location === \"string\") {\n        newList.push(location);\n      } else {\n        const { name, lat, lon, country } = location;\n        newList.push({\n          name,\n          lat,\n          lon,\n          country,\n        });\n      }\n      localStorage.setItem(FAVORITE_KEY, JSON.stringify(newList));\n      return newList;\n    });\n  }, []);\n  const removeFavorite = useCallback((location: string | LocationData) => {\n    setFavoriteList((curList) => {\n      const newList = [...curList];\n      const index = findLocationIndex(newList, location);\n      newList.splice(index, 1);\n      localStorage.setItem(FAVORITE_KEY, JSON.stringify(newList));\n      return newList;\n    });\n  }, []);\n  const favoriteListRef = useRefInSync(favoriteList);\n  const isFavorite = useCallback(\n    (location: string | LocationData) => {\n      return findLocationIndex(favoriteListRef.current, location) >= 0;\n    },\n    [favoriteListRef],\n  );\n  const clickFavorite = useCallback(\n    (location: string | LocationData) => {\n      if (isFavorite(location)) {\n        removeFavorite(location);\n      } else {\n        addFavorite(location);\n      }\n    },\n    [isFavorite, removeFavorite, addFavorite],\n  );\n  const getNameFromFavorite = useCallback(\n    (location?: string) => {\n      if (location == null) return null;\n      const geolocation = getGeolocationFromString(location);\n      if (geolocation == null) return null;\n      const [lat, lon] = geolocation;\n      const found = favoriteListRef.current.find((l) => {\n        if (typeof l === \"string\") return false;\n        return l.lat === lat && l.lon === lon;\n      }) as LocationData | undefined;\n      return found?.name;\n    },\n    [favoriteListRef],\n  );\n  return { favoriteList, isFavorite, clickFavorite, getNameFromFavorite };\n};\n","import Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Paper from \"@mui/material/Paper\";\nimport type { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport CountryFlag from \"components/weather/CountryFlag\";\nimport { type TCountryCode, getCountryData } from \"countries-list\";\nimport { useFavorite } from \"hooks/useFavorite\";\n\nconst useStyles = makeStyles<Theme>((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  list: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function Favorite() {\n  const classes = useStyles();\n  const { favoriteList } = useFavorite();\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper elevation={2}>\n            <List component=\"nav\" className={classes.list}>\n              {favoriteList.map((location) => {\n                const key =\n                  typeof location === \"string\"\n                    ? location\n                    : `${location.lat}${encodeURIComponent(\"|\")}${\n                        location.lon\n                      }`;\n                const name =\n                  typeof location === \"string\" ? location : location.name;\n                const countryData =\n                  typeof location === \"string\"\n                    ? null\n                    : getCountryData(location.country as TCountryCode);\n                return (\n                  <ListItem\n                    key={key}\n                    button\n                    component=\"a\"\n                    href={`#/location/${key}`}\n                  >\n                    <ListItemText\n                      primary={\n                        <>\n                          {name}\n                          {countryData != null &&\n                            name !== countryData.name &&\n                            ` - ${countryData.name}`}\n                          {typeof location !== \"string\" && (\n                            <CountryFlag countryCode={location.country} />\n                          )}\n                        </>\n                      }\n                    />\n                  </ListItem>\n                );\n              })}\n              {favoriteList.length === 0 && (\n                <ListItem>\n                  No favorite, please add location in Home page\n                </ListItem>\n              )}\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import { LocationData } from \"types/data\";\nimport { isNumeric } from \"./number\";\n\nexport function findLocationIndex(\n  locList: Array<string | LocationData>,\n  location: string | LocationData,\n) {\n  let index = -1;\n  if (typeof location === \"string\") {\n    index = locList.indexOf(location);\n  } else {\n    index = locList.findIndex((l) => {\n      if (typeof l === \"string\") return false;\n      return (\n        (l.name === location.name && l.country === location.country) ||\n        (l.lat === location.lat && l.lon === location.lon)\n      );\n    });\n    if (index === -1) {\n      index = locList.findIndex((l) => {\n        if (typeof l === \"string\") return l === location.name;\n        return false;\n      });\n    }\n  }\n  return index;\n}\n\nexport function getGeolocationFromString(location: string) {\n  const geolocationString = location.split(\"|\");\n  if (isGeolocation(geolocationString)) {\n    const [lat, lon] = geolocationString;\n    return [parseFloat(lat), parseFloat(lon)];\n  }\n  return null;\n}\n\nexport function isGeolocation(\n  geolocationString: string[],\n): geolocationString is [string, string] {\n  return (\n    geolocationString.length === 2 &&\n    geolocationString.every((str) => isNumeric(str))\n  );\n}\n","// https://stackoverflow.com/questions/175739/how-can-i-check-if-a-string-is-a-valid-number\nexport function isNumeric(str: string) {\n  if (typeof str != \"string\") return false;\n  return (\n    // @ts-expect-error need this to check string\n    !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\n    !isNaN(parseFloat(str)) // ...and ensure strings of whitespace fail\n  );\n}\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"ownerState\"],\n  _excluded2 = [\"variants\"],\n  _excluded3 = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"];\n/* eslint-disable no-underscore-dangle */\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { isPlainObject } from '@mui/utils/deepmerge';\nimport capitalize from '@mui/utils/capitalize';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport createTheme from './createTheme';\nimport styleFunctionSx from './styleFunctionSx';\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\nconst lowercaseFirstLetter = string => {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\nfunction resolveTheme({\n  defaultTheme,\n  theme,\n  themeId\n}) {\n  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (props, styles) => styles[slot];\n}\nfunction processStyleArg(callableStyle, _ref) {\n  let {\n      ownerState\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const resolvedStylesArg = typeof callableStyle === 'function' ? callableStyle(_extends({\n    ownerState\n  }, props)) : callableStyle;\n  if (Array.isArray(resolvedStylesArg)) {\n    return resolvedStylesArg.flatMap(resolvedStyle => processStyleArg(resolvedStyle, _extends({\n      ownerState\n    }, props)));\n  }\n  if (!!resolvedStylesArg && typeof resolvedStylesArg === 'object' && Array.isArray(resolvedStylesArg.variants)) {\n    const {\n        variants = []\n      } = resolvedStylesArg,\n      otherStyles = _objectWithoutPropertiesLoose(resolvedStylesArg, _excluded2);\n    let result = otherStyles;\n    variants.forEach(variant => {\n      let isMatch = true;\n      if (typeof variant.props === 'function') {\n        isMatch = variant.props(_extends({\n          ownerState\n        }, props, ownerState));\n      } else {\n        Object.keys(variant.props).forEach(key => {\n          if ((ownerState == null ? void 0 : ownerState[key]) !== variant.props[key] && props[key] !== variant.props[key]) {\n            isMatch = false;\n          }\n        });\n      }\n      if (isMatch) {\n        if (!Array.isArray(result)) {\n          result = [result];\n        }\n        result.push(typeof variant.style === 'function' ? variant.style(_extends({\n          ownerState\n        }, props, ownerState)) : variant.style);\n      }\n    });\n    return result;\n  }\n  return resolvedStylesArg;\n}\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  const systemSx = props => {\n    return styleFunctionSx(_extends({}, props, {\n      theme: resolveTheme(_extends({}, props, {\n        defaultTheme,\n        themeId\n      }))\n    }));\n  };\n  systemSx.__mui_systemSx = true;\n  return (tag, inputOptions = {}) => {\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));\n    const {\n        name: componentName,\n        slot: componentSlot,\n        skipVariantsResolver: inputSkipVariantsResolver,\n        skipSx: inputSkipSx,\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\n      } = inputOptions,\n      options = _objectWithoutPropertiesLoose(inputOptions, _excluded3);\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, _extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n    const transformStyleArg = stylesArg => {\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg || isPlainObject(stylesArg)) {\n        return props => processStyleArg(stylesArg, _extends({}, props, {\n          theme: resolveTheme({\n            theme: props.theme,\n            defaultTheme,\n            themeId\n          })\n        }));\n      }\n      return stylesArg;\n    };\n    const muiStyledResolver = (styleArg, ...expressions) => {\n      let transformedStyleArg = transformStyleArg(styleArg);\n      const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {\n            return null;\n          }\n          const styleOverrides = theme.components[componentName].styleOverrides;\n          const resolvedStyleOverrides = {};\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n          Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\n            resolvedStyleOverrides[slotKey] = processStyleArg(slotStyle, _extends({}, props, {\n              theme\n            }));\n          });\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          var _theme$components;\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[componentName]) == null ? void 0 : _theme$components.variants;\n          return processStyleArg({\n            variants: themeVariants\n          }, _extends({}, props, {\n            theme\n          }));\n        });\n      }\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      }\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n        Component.displayName = displayName;\n      }\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n}","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","'use client';\n\nimport getThemeProps from './getThemeProps';\nimport useTheme from '../useTheme';\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  const mergedProps = getThemeProps({\n    theme,\n    name,\n    props\n  });\n  return mergedProps;\n}"],"names":["CountryFlag","_ref","countryCode","fontSize","_jsx","style","margin","className","concat","toLowerCase","memo","FAVORITE_KEY","useFavorite","favoriteList","setFavoriteList","useState","JSON","parse","localStorage","getItem","addFavorite","useCallback","location","curList","newList","push","name","lat","lon","country","setItem","stringify","removeFavorite","index","findLocationIndex","splice","favoriteListRef","useRefInSync","isFavorite","current","clickFavorite","getNameFromFavorite","geolocation","getGeolocationFromString","found","find","l","useStyles","makeStyles","theme","container","paddingTop","spacing","paddingBottom","list","backgroundColor","palette","background","paper","Favorite","classes","Container","maxWidth","children","Grid","item","xs","Paper","elevation","_jsxs","List","component","map","key","encodeURIComponent","countryData","getCountryData","ListItem","button","href","ListItemText","primary","_Fragment","length","locList","indexOf","findIndex","geolocationString","split","every","str","isNaN","parseFloat","isNumeric","isGeolocation","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","options","arguments","undefined","createStyledComponent","useThemeProps","componentName","ContainerRoot","_extends","width","marginLeft","boxSizing","marginRight","display","paddingLeft","paddingRight","breakpoints","up","_ref2","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","_ref3","Math","max","React","ref","other","_objectWithoutPropertiesLoose","useUtilityClasses","slots","composeClasses","generateUtilityClass","as","clsx","createContainer","styled","useDefaultProps","_excluded2","_excluded3","shouldForwardProp","prop","systemDefaultTheme","lowercaseFirstLetter","string","charAt","slice","resolveTheme","themeId","obj","defaultOverridesResolver","processStyleArg","callableStyle","resolvedStylesArg","Array","isArray","flatMap","resolvedStyle","variants","result","forEach","variant","isMatch","input","rootShouldForwardProp","slotShouldForwardProp","systemSx","styleFunctionSx","__mui_systemSx","tag","inputOptions","processStyles","filter","componentSlot","skipVariantsResolver","inputSkipVariantsResolver","skipSx","inputSkipSx","shouldForwardPropOption","charCodeAt","isStringTag","defaultStyledResolver","styledEngineStyled","label","transformStyleArg","stylesArg","__emotion_real","isPlainObject","muiStyledResolver","styleArg","transformedStyleArg","_len","expressions","_key","expressionsWithDefaultTheme","components","styleOverrides","resolvedStyleOverrides","entries","slotKey","slotStyle","_theme$components","numOfCustomFnsApplied","placeholders","fill","raw","Component","muiName","withConfig","createStyled","useTheme","getThemeProps"],"sourceRoot":""}