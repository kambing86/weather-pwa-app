{"version":3,"file":"static/js/332.59d84074.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","pages/Home.tsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? ( /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import Container from \"@mui/material/Container\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport Icon from \"@mui/material/Icon\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport WeatherResult from \"components/weather/WeatherResult\";\nimport { useRefInSync } from \"hooks/helpers/useRefInSync\";\nimport { useWeatherAtHomepage } from \"hooks/useWeather\";\nimport { ChangeEvent, FormEvent, useCallback, useState } from \"react\";\n\nconst useStyles = makeStyles<Theme>((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  input: {\n    marginBottom: theme.spacing(4),\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  const { isGettingLocation, setLocation } = useWeatherAtHomepage();\n  const [search, setSearch] = useState(\"\");\n  const inputChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSearch(event.target.value);\n  }, []);\n  const searchRef = useRefInSync(search);\n  const clickSearch = useCallback(() => {\n    const searchString = searchRef.current;\n    if (searchString !== \"\") setLocation(searchString);\n  }, [searchRef, setLocation]);\n  const formSubmitHandler = useCallback(\n    (event: FormEvent) => {\n      event.preventDefault();\n      clickSearch();\n    },\n    [clickSearch],\n  );\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <form noValidate autoComplete=\"off\" onSubmit={formSubmitHandler}>\n            <FormControl className={classes.input}>\n              <InputLabel>Location</InputLabel>\n              <Input\n                value={search}\n                onChange={inputChange}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton type=\"submit\" edge=\"end\">\n                      <Icon>search</Icon>\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          </form>\n          {isGettingLocation && <Typography>Getting Location...</Typography>}\n          {!isGettingLocation && <WeatherResult />}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n"],"names":["getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_span","_excluded","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","concat","capitalize","position","disablePointerEvents","variant","_ref","theme","_extends","display","height","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useDefaultProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","Provider","value","as","clsx","_jsxs","Typography","useStyles","makeStyles","container","paddingTop","spacing","paddingBottom","input","marginBottom","Home","isGettingLocation","setLocation","useWeatherAtHomepage","search","setSearch","useState","inputChange","useCallback","event","target","searchRef","useRefInSync","clickSearch","searchString","current","formSubmitHandler","preventDefault","Container","maxWidth","Grid","item","xs","noValidate","autoComplete","onSubmit","FormControl","InputLabel","Input","onChange","endAdornment","InputAdornment","IconButton","type","edge","Icon","WeatherResult"],"sourceRoot":""}